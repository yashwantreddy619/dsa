#include <iostream>
#include <queue>
using namespace std;

struct Node {
    int data;
    Node* left;
    Node* right;
};

Node* createNode(int data) {
    Node* newNode = new Node();
    newNode->data = data;
    newNode->left = nullptr;
    newNode->right = nullptr;
    return newNode;
}

Node* insert(Node* root, int data) {
    if (root == nullptr) {
        return createNode(data);
    }
    if (data < root->data) {
        root->left = insert(root->left, data);
    } else if (data > root->data) {
        root->right = insert(root->right, data);
    }
    return root;
}

void displayParentChild(Node* root) {
    if (root == nullptr) {
        return;
    }
    if (root->left) {
        cout << "Parent: " << root->data << " -> Left Child: " << root->left->data << endl;
    }
    if (root->right) {
        cout << "Parent: " << root->data << " -> Right Child: " << root->right->data << endl;
    }
    displayParentChild(root->left);
    displayParentChild(root->right);
}

void displayLeafNodes(Node* root) {
    if (root == nullptr) {
        return;
    }
    if (root->left == nullptr && root->right == nullptr) {
        cout << root->data << " ";
    }
    displayLeafNodes(root->left);
    displayLeafNodes(root->right);
}

void displayLevelWise(Node* root) {
    if (root == nullptr) {
        return;
    }
    queue<Node*> q;
    q.push(root);
    while (!q.empty()) {
        Node* current = q.front();
        q.pop();
        cout << current->data << " ";
        if (current->left) {
            q.push(current->left);
        }
        if (current->right) {
            q.push(current->right);
        }
    }
}

int main() {
    Node* root = nullptr;
    root = insert(root, 50);
    insert(root, 30);
    insert(root, 70);
    insert(root, 20);
    insert(root, 40);
    insert(root, 60);
    insert(root, 80);

    cout << "Parent and Child Nodes:" << endl;
    displayParentChild(root);

    cout << "\nLeaf Nodes: ";
    displayLeafNodes(root);
    cout << endl;

    cout << "\nTree Level-wise: ";
    displayLevelWise(root);
    cout << endl;

    return 0;
}
